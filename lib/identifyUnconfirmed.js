// Generated by CoffeeScript 1.6.3
(function() {
  var dyna;

  dyna = this.dyna;

  dyna.identifyUnconfirmed = function(e, t) {
    var address, f, keyCode;
    console.log('identifyUnconfirmed', e.target.value);
    e.preventDefault();
    f = t.firstNode || e.target.f;
    dyna.valid = $(f).find('input.identity').parsley('validate');
    dyna.valid || (dyna.valid = $(f).find('input#identity').parsley('validate'));
    address = e.target.value;
    keyCode = e.keyCode;
    if (!dyna.valid) {
      return dyna.nextStep();
    }
    console.log('valid input', address, keyCode, dyna.valid);
    if (dyna.valid) {
      if (!address) {
        return dyna.nextStep();
      }
      if (address.length > 512) {
        throw new Meteor.Error(415, 'Stream exceeeds maximum length of 512.');
      }
      return $.ajax({
        type: "GET",
        url: 'https://api.mailgun.net/v2/address/validate?callback=?',
        data: {
          address: address,
          api_key: b3.validate_api_key
        },
        dataType: "jsonp",
        crossDomain: true,
        success: function(data, status) {
          console.log('mailgun result', data);
          if (!data.is_valid) {
            dyna.confirmed = false;
            dyna.valid = false;
            if (data.did_you_mean != null) {
              dyna.emailMaybe = data.did_you_mean;
            }
            if (data.did_you_mean == null) {
              dyna.emailMaybe = "";
              data.did_you_mean = 'something else..?';
            }
            Session.set('dynaTooltipText', "" + address + " invalid, did you mean " + data.did_you_mean);
            b3.flashWarn(data.did_you_mean, {
              header: "" + address + " invalid, did you mean:",
              single: 'dynaUser'
            });
            Session.set('dynaStep', 1);
            return dyna.nextStep();
          }
          if (data.is_valid) {
            dyna.valid = true;
            dyna.emailMaybe = address;
            return Meteor.call('checkIdentity', address, function(error, result) {
              console.log('checkidentity error, result', error, result);
              if (error != null) {
                b3.flashError(error.reason);
                return dyna.nextStep();
              }
              if (result === false) {
                dyna.confirmed = false;
                b3.flashInfo(address, {
                  single: 'dynaUser',
                  header: 'New email, sign up!'
                });
                Session.set('dynaStep', 2);
                dyna.identity = "";
                return dyna.nextStep();
              } else {
                if (result != null) {
                  dyna.confirmed = true;
                  dyna.userExisting = true;
                  b3.flashSuccess(address, {
                    header: 'Welcome back:',
                    single: 'dynaUser'
                  });
                  b3.flashInfo('Please enter a password.', {
                    single: 'dynaPass'
                  });
                  Session.set('dynaStep', 3);
                  return dyna.nextStep();
                } else {
                  return dyna.nextStep();
                }
              }
            });
          }
        },
        error: function(request, status, error) {
          return b3.flashError(error.reason);
        }
      });
      return dyna.nextStep();
    }
  };

}).call(this);
