// Generated by CoffeeScript 1.6.3
(function() {
  var dyna;

  dyna = this.dyna;

  dyna.signBack = function(e, t) {
    var $f, email, f, hasError, password, token, _ref,
      _this = this;
    e.preventDefault();
    f = ((_ref = t.firstNode) != null ? _ref.form : void 0) || e.target.form;
    $f = $(f);
    hasError = false;
    password = $f.find('input.enterPassword').val();
    if (!(/\d/.test(password))) {
      hasError = true;
    }
    if (!(/\D/.test(password))) {
      hasError = true;
    }
    if (password.length < 6) {
      hasError = true;
    }
    if (hasError) {
      b3.flashWarn('requires a digit, non-digit letter, with minimum length of 6.', {
        header: 'Invalid Password',
        single: 'dynaPass'
      });
      return;
    }
    if (Session.equals('dynaStep', 'reset')) {
      token = Session.get('dynaToken');
      return Accounts.resetPassword(token, password, function(error) {
        if (error != null) {
          return b3.flashError(error.reason);
        } else {
          return b3.flashSuccess('password is now reset.');
        }
      });
    }
    email = dyna.emailMaybe;
    if (dyna.userExisting !== true) {
      Session.set('dynaStep', 1);
      return dyna.nextStep();
    }
    if (Meteor.userId()) {
      Session.set('dynaStep', 5);
      return dyna.nextStep();
    }
    if (Meteor.loggingIn()) {
      Session.set('dynaStep', 4);
      return dyna.nextStep();
    }
    return Meteor.loginWithPassword(email, password, function(error) {
      if (error != null) {
        Session.set('dynaTooltipText', error.reason);
        b3.flashError(error.reason, {
          header: 'Login Error:',
          single: 'dynaPass'
        });
        Session.set('dynaStep', 4);
      } else {
        b3.flashSuccess(email, {
          header: 'Authenticated:',
          single: 'dynaPass'
        });
        Session.set('dynaStep', 5);
      }
      return dyna.nextStep();
    });
  };

}).call(this);
