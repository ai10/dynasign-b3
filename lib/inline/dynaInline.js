// Generated by CoffeeScript 1.6.3
(function() {
  Meteor.startup(function() {
    Session.set('dynaStep', 1);
    Session.set('dynaUserExisting', false);
    Session.set('dynaUserAuthenticated', false);
    Session.set('dynaEmailMaybe', "");
    Session.set('dynaEmailValid', false);
    Session.set('dynaEmailTooltip', 'e-mail sign in.');
    return Session.set('dynaPasswordTooltip', 'password');
  });

  Template.dynaSign.created = function() {};

  Template.dynaSign.destroyed = function() {
    return 'dynaSign destroyed';
  };

  Template.dynaSign.rendered = function() {
    var f, _ref, _ref1;
    if (Meteor.user()) {
      Session.set('dynaStep', 0);
      Session.set('dynaUserExisting', true);
      Session.set('dynaEmailValid', true);
      Session.set('dynaEmailMaybe', Meteor.user().emails[0].address);
    }
    f = this.firstNode;
    return (_ref = $(f)) != null ? (_ref1 = _ref.parsley('destroy')) != null ? _ref1.parsley(b3.parsley) : void 0 : void 0;
  };

  Template.dynaSign.helpers({
    dynaEmailMaybe: function() {
      if (Session.equals('dynaEmailValid', true)) {
        return Session.get('dynaEmailMaybe');
      } else {
        return "";
      }
    },
    emailTooltip: function() {
      return Session.get('dynaEmailTooltip');
    },
    passwordTooltip: function() {
      return Session.get('dynaPasswordTooltip');
    },
    signedInAs: function() {
      var _ref, _ref1, _ref2, _ref3, _ref4;
      return (_ref = Meteor.user().username) != null ? _ref : (_ref1 = (_ref2 = Meteor.user().profile) != null ? _ref2.name : void 0) != null ? _ref1 : (_ref3 = (_ref4 = Meteor.user().emails[0]) != null ? _ref4.address : void 0) != null ? _ref3 : "Logged In";
    },
    showStep3: function() {
      if (Session.equals('dynaStep', 3)) {
        return "";
      }
      if (Session.equals('dynaStep', 'reset')) {
        return "";
      }
      return "hidden";
    },
    showStep2: function() {
      if (Session.equals('dynaStep', 2)) {
        return "";
      }
      return "hidden";
    },
    showStep1: function() {
      if (Session.equals('dynaStep', 1)) {
        return "";
      }
      return "hidden";
    },
    showChangeUser: function() {
      if (Session.equals('dynaStep', 1)) {
        return "hidden";
      }
      return "";
    },
    showComplete: function() {
      if (Session.equals('dynaStep', 3)) {
        if (Session.equals('dynaUserExisting', false)) {
          return "";
        }
      }
      if (Session.equals('dynaStep', 'reset')) {
        return "";
      }
      return "hidden";
    },
    showNew: function() {
      if (Session.equals('dynaStep', 1)) {
        if (Session.equals('dynaEmailValid', true)) {
          if (Session.equals('dynaUserExisting', false)) {
            return "";
          }
        }
      }
      return "hidden";
    },
    showSignIn: function() {
      if (Session.equals('dynaStep', 3)) {
        if (Session.equals('dynaUserExisting', true)) {
          return "";
        }
      }
      return "hidden";
    }
  });

  Template.dynaSign.events({
    'change, keyup input#emailInput': accountEvents.inputEmail,
    'change, keyup input#emailReEnter': accountEvents.emailReEnter,
    'change, keyup input#passwordInput': accountEvents.inputPassword,
    'keydown input': function(e, t) {
      console.log('keydown');
      if (e.keyCode === 13) {
        e.preventDefault();
      }
    },
    'click button#signUpNew': accountEvents.signUpNew,
    'click button#signUpComplete': accountEvents.signPass,
    'click button#signIn': accountEvents.signPass,
    'click button#changeUser': function(e, t) {
      e.preventDefault();
      Session.set('dynaEmailMaybe', "");
      Session.set('dynaEmailValid', false);
      Session.set('dynaUserExisting', false);
      Session.set('dynaStep', 1);
      if (Meteor.userId()) {
        Meteor.logout(function() {
          Session.set('dynaEmailMaybe', "");
          Session.set('dynaEmailValid', false);
          Session.set('dynaUserExisting', false);
          return Session.set('dynaStep', 1);
        });
      }
      return false;
    },
    'click button#forgotPass': function() {
      var email;
      if (Session.equals('dynaUserExisting', true)) {
        email = Session.get('dynaEmailMaybe');
        return Accounts.forgotPassword({
          email: email
        }, function(error) {
          if (error != null) {
            return b3.flashError('Error:', error);
          } else {
            return b3.flashSuccess("reset password link sent to " + email);
          }
        });
      }
    }
  });

}).call(this);
